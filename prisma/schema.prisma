// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(uuid())
  firstName     String
  lastName      String
  email         String          @unique
  username      String          @unique
  password      String
  about         String
  role          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  project       Project[]
  comment       Comment[]
  review        Review[]
  userExpert    UserExpert?
  userChallenge UserChallenge[]
}

model Project {
  id            String    @id @default(uuid())
  name          String
  slug          String    @unique
  description   String
  featuredImage String
  category      String
  type          String
  link          String
  repository    String
  tech          String
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  comment       Comment[]
  review        Review[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  review    String?
  status    String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserExpert {
  id        String   @id @default(uuid())
  expertise String
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Challenge {
  id            String          @id @default(uuid())
  name          String
  description   String
  featuredImage String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  userChallenge UserChallenge[]
}

model UserChallenge {
  id          String    @id @default(uuid())
  status      String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
